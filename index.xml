<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dasein</title><link>https://dasein.dev/</link><description>Recent content on dasein</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 22 Mar 2024 19:44:00 -0300</lastBuildDate><atom:link href="https://dasein.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>日本語の最初の投稿</title><link>https://dasein.dev/posts/3d6cad3d/</link><pubDate>Fri, 22 Mar 2024 19:44:00 -0300</pubDate><guid>https://dasein.dev/posts/3d6cad3d/</guid><description>今日は2024年3月22日ですが、これが私の日本語の最初の投稿です。数か月間勉強していますが、これはまだ非常に難しいですよね。
Note: I had to use jisho.org for a few words..</description></item><item><title>On life: Part 1</title><link>https://dasein.dev/posts/eefb15c6/</link><pubDate>Tue, 19 Mar 2024 19:40:01 -0300</pubDate><guid>https://dasein.dev/posts/eefb15c6/</guid><description>How sad for those who have never felt grateful.</description></item><item><title>Wrapping C# types with actual domain specific knowledge</title><link>https://dasein.dev/posts/e9c2ce81/</link><pubDate>Tue, 27 Feb 2024 21:35:24 -0300</pubDate><guid>https://dasein.dev/posts/e9c2ce81/</guid><description>While implementing the domain for this new feature our team was working on, I felt surprisingly uncomfortable with how we were using C# types to represent texts, two-valued logic, monetary values, etc. If we are going to represent domain specific knowledge, we should also encompass these properties; they have rules that exceed their primitive type&amp;rsquo;s constraints, after all.
Let&amp;rsquo;s make the case for a system that should only accept documents that have been registered starting from the year 2000, but can accept documents up to 10 years in advance (from the request).</description></item><item><title>Introducing domain-driven design to a frontend application</title><link>https://dasein.dev/posts/eb18da4e/</link><pubDate>Sun, 07 May 2023 19:29:57 -0300</pubDate><guid>https://dasein.dev/posts/eb18da4e/</guid><description>After delving into our React.js project at work, experiencing the mysterious ways in which it was built and grappling with the unintended consequences of poor decisions, we decided it was time to shake things up a bit.
Changes were necessary, and the first major one we implemented was transitioning from Javascript to Typescript. Typescript is a strongly and statically typed language, it allows developers to define types for variables, functions and objects, which helps catch type-related errors during development.</description></item><item><title>An insight into beautiful code</title><link>https://dasein.dev/posts/8a79bd9f/</link><pubDate>Mon, 03 Oct 2022 00:54:05 -0300</pubDate><guid>https://dasein.dev/posts/8a79bd9f/</guid><description>Through my journey as a software developer I have always cared for the aesthetics of my code; be the spacing between lines, naming conventions, or the structure of a project - much like a wordsmith or a sculptor - there is the pursuit of something beautiful, creative and expressive.
Now that I think about it, though it can be intuitively understood, we struggle to describe beautiful code in a coherent set of qualities.</description></item><item><title>About Me</title><link>https://dasein.dev/about/</link><pubDate>Mon, 04 Oct 2021 21:44:25 -0300</pubDate><guid>https://dasein.dev/about/</guid><description>A work in progress..</description></item></channel></rss>